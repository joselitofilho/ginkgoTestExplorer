{
  "name": "ginkgotestexplorer",
  "displayName": "Ginkgo Test Explorer",
  "icon": "media/icon.png",
  "description": "Provides support for Ginkgo and Gomega",
  "repository": {
    "type": "git",
    "url": "https://github.com/joselitofilho/ginkgoTestExplorer"
  },
  "version": "1.0.1",
  "publisher": "joselitofilho",
  "engines": {
    "vscode": "^1.53.0"
  },
  "keywords": [
    "go",
    "test",
    "gotest",
    "bdd test",
    "ginkgo"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:ginkgotestexplorer.runAllProjectTests",
    "onCommand:ginkgotestexplorer.generateProjectCoverage",
    "onView:ginkgotestexplorer",
    "onView:ginkgotestfilesexplorer"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "testExplorerView",
          "title": "Test Explorer",
          "icon": "media/test.svg"
        }
      ]
    },
    "views": {
      "testExplorerView": [
        {
          "id": "ginkgotestfilesexplorer",
          "name": "Test files"
        },
        {
          "id": "ginkgotestexplorer",
          "name": "Ginkgo tests"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "ginkgotestfilesexplorer",
        "contents": "You have not yet opened a folder.\n[Open Folder](command:vscode.openFolder)"
      },
      {
        "view": "ginkgotestexplorer",
        "contents": "Welcome!\n\nSelect a ginkgo test file to see the test tree view.\n\nDo you have ginkgo executable installed? [learn more](https://onsi.github.io/ginkgo/#getting-ginkgo).\n[Install executable](command:ginkgotestexplorer.installDependencies)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "ginkgotestexplorer.runSuiteTest",
          "when": "view == ginkgotestexplorer",
          "group": "navigation@0"
        },
        {
          "command": "ginkgotestexplorer.generateSuiteCoverage",
          "when": "view == ginkgotestexplorer",
          "group": "navigation@1"
        },
        {
          "command": "ginkgotestexplorer.gotoSymbolInEditor",
          "when": "view == ginkgotestexplorer",
          "group": "navigation@2"
        },
        {
          "command": "ginkgotestfilesexplorer.refreshTreeFiles",
          "when": "view == ginkgotestfilesexplorer",
          "group": "navigation@0"
        }
      ],
      "view/item/context": [
        {
          "command": "ginkgotestexplorer.runTest.tree",
          "when": "view == ginkgotestexplorer && viewItem == test"
        },
        {
          "command": "ginkgotestexplorer.debugTest.tree",
          "when": "view == ginkgotestexplorer && viewItem == test"
        },
        {
          "command": "ginkgotestexplorer.showTestoutput",
          "when": "view == ginkgotestexplorer"
        }
      ]
    },
    "commands": [
      {
        "command": "ginkgotestexplorer.runTest.tree",
        "title": "run test"
      },
      {
        "command": "ginkgotestexplorer.debugTest.tree",
        "title": "debug test"
      },
      {
        "command": "ginkgotestexplorer.runTest.codelens",
        "title": "run test"
      },
      {
        "command": "ginkgotestexplorer.runSuiteTest",
        "title": "Ginkgo: Run suite test",
        "icon": {
          "light": "resources/light/run.svg",
          "dark": "resources/dark/run.svg"
        }
      },
      {
        "command": "ginkgotestexplorer.runAllProjectTests",
        "title": "Ginkgo: Run all project tests"
      },
      {
        "command": "ginkgotestexplorer.generateSuiteCoverage",
        "title": "Ginkgo: Generate suite coverage",
        "icon": {
          "light": "resources/light/coverage.svg",
          "dark": "resources/dark/coverage.svg"
        }
      },
      {
        "command": "ginkgotestexplorer.generateProjectCoverage",
        "title": "Ginkgo: Generate project coverage"
      },
      {
        "command": "ginkgotestexplorer.showTestoutput",
        "title": "show output"
      },
      {
        "command": "ginkgotestexplorer.gotoSymbolInEditor",
        "title": "Ginkgo: Go to symbol",
        "icon": {
          "light": "resources/light/search.svg",
          "dark": "resources/dark/search.svg"
        }
      },
      {
        "command": "ginkgotestexplorer.installDependencies",
        "title": "Ginkgo: Install dependencies"
      },
      {
        "command": "ginkgotestfilesexplorer.openFile",
        "title": "open file"
      },
      {
        "command": "ginkgotestfilesexplorer.refreshTreeFiles",
        "title": "Ginkgo: Refresh test file tree",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      }
    ],
    "configuration": {
      "title": "Ginkgo Tools",
      "properties": {
        "ginkgotestexplorer.updateOn": {
          "type": "string",
          "default": "onType",
          "enum": [
            "onSave",
            "onType"
          ],
          "enumDescriptions": [
            "Update on file save",
            "Update as you type"
          ],
          "description": "When to update the outline view."
        },
        "ginkgotestexplorer.updateOnTypeDelay": {
          "type": "number",
          "default": 1000,
          "minimum": 0,
          "description": "Minimum time, in milliseconds, to wait before running `ginkgo outline` after a document update. Smaller values result in repeated calls to `ginkgo outline` as you type."
        },
        "ginkgotestexplorer.ginkgoPath": {
          "type": "string",
          "default": "ginkgo",
          "description": "Path to ginkgo executable."
        },
        "ginkgotestexplorer.doubleClickThreshold": {
          "type": "number",
          "default": 400,
          "minimum": 0,
          "description": "Maximum time, in milliseconds, between two clicks in a double click."
        },
        "ginkgotestexplorer.cacheTTL": {
          "type": "number",
          "default": 3600000,
          "minimum": 0,
          "description": "Maximum time, in seconds, to cache the result of `ginkgo outline` for a specific document version."
        },
        "ginkgotestexplorer.enableCodeLens": {
          "type": "boolean",
          "default": true,
          "description": "Control whether the editor shows CodeLens."
        },
        "ginkgotestexplorer.testEnvVars": {
          "type": "object",
          "default": {},
          "description": "Environment variables that will be passed to the process that runs the Ginkgo tests",
          "scope": "resource"
        },
        "ginkgotestexplorer.testEnvFile": {
          "type": "string",
          "default": null,
          "description": "Absolute path to a file containing environment variables definitions. File contents should be of the form key=value.",
          "scope": "resource"
        },
        "ginkgotestexplorer.executeCommandsOn": {
          "type": "string",
          "default": "onTerminal",
          "enum": [
            "onOutputChannel",
            "onTerminal"
          ],
          "enumDescriptions": [
            "Execute commands on output channel",
            "Exeucte commands on terminal"
          ],
          "description": "When to execute commands."
        },
        "ginkgotestexplorer.buildTags": { 
          "type": "string",
          "default": null,
          "description": "Build tags to be passed to ginkgo and vscode debug configuration using the flag `--tags=`",
          "scope": "resource"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/chai": "^4.2.15",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.53.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "chai": "^4.3.0",
    "eslint": "^7.19.0",
    "glob": "^7.1.6",
    "mocha": "^8.2.1",
    "ts-node": "^9.1.1",
    "typescript": "^4.1.3",
    "vscode-test": "^1.5.0"
  },
  "dependencies": {
    "junit2json": "^2.0.2"
  }
}
